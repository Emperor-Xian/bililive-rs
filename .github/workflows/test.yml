on:
  push:
    branches:
      - master
      - split-crates
  pull_request:
    branches:
      - master
      - split-crates

name: Test

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          components: rustfmt, clippy
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        name: Check Code Format 🔧
        with:
          command: fmt
          args: -- --check
      - name: Run Clippy Lints (core) 🔨
        run: cargo clippy
        working-directory: ./bililive-core
      - name: Run Clippy Lints (bililive) 🔨
        run: cargo clippy
        working-directory: ./bililive
      - name: Run Clippy Lints (actix-bililive) 🔨
        run: cargo clippy
        working-directory: ./actix-bililive

  test_tokio:
    name: Test (tokio)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
      - name: Running Tests (core) 🚀
        run: cargo test
        working-directory: ./bililive-core
      - name: Running Tests (bililive) 🚀
        run: cargo test
        working-directory: ./bililive
      - name: Running Tests (actix-bililive) 🚀
        run: cargo test
        working-directory: ./actix-bililive

  test_async:
    name: Test (async-std)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
      - name: Running Tests (core) 🚀
        run: cargo test --no-default-features --features async-std-support
        working-directory: ./bililive-core
      - name: Running Tests (bililive) 🚀
        run: cargo test --no-default-features --features async-native-tls
        working-directory: ./bililive

  doc_test:
    name: Doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          components: rust-docs
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
      - name: Building Docs (core) 🚀
        run: cargo rustdoc --all-features
        working-directory: ./bililive-core
      - name: Building Docs (bililive) 🚀
        run: cargo rustdoc --all-features
        working-directory: ./bililive
      - name: Building Docs (actix-bililive) 🚀
        run: cargo rustdoc --all-features
        working-directory: ./actix-bililive